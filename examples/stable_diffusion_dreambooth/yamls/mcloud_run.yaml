run_name: stable-diffusion-dreambooth
cluster: r1z1    # Name of the cluster to use for this run
gpu_type: a100_80gb   # Type of GPU to use
gpu_num: 8    # Number of GPUs to use
image: mosaicml/pytorch:1.13.1_cu117-python3.10-ubuntu20.04
integrations:
- integration_type: git_repo
  git_repo: A-Jacobson/examples
  pip_install: scipy .[stable-diffusion-dreambooth]
  git_branch: dreambooth
command: |
  cd examples/examples/stable_diffusion_dreambooth
  composer main.py /mnt/config/parameters.yaml

parameters:
  # Name of the  training run used for checkpointing and other logging
  run_name: stable-diffusion-dreambooth

  seed: 42 # Random seed

  max_duration: 800ba # Duration to train specified as a Time string
  eval_interval: 200ba

  global_train_batch_size: 32 # Training total batch size (4 per 40gb A100, 8 cards)
  global_eval_batch_size: 32

  # Amount of gradient accumulation, auto (GPU only) means Composer will set the optimal value, set to 1 for cpu
  grad_accum: auto
  precision: amp # (GPU only), set to fp32 if training on cpu
  use_ema: false
  use_prior_preservation: false
  prior_loss_weight: 1.0
  num_class_images: 200

  dataset:
    instance_prompt: a photo of sks dog
    instance_data_root: ./data/instance_data
    # class_prompt: a photo of dog
    # class_data_root: ./data/class_data
    resolution: 512 # training image size
    center_crop: false

    eval_prompts: # a list of prompts to use for evaluation
    - A photo of sks dog in a bucket
    - A photo of sks dog with a blue sweater
    - A photo of sks dog as a professor
    - A photo of sks dog as a doctor
    - A photo of sks dog as a professor and doctor

  model:
    # commonly CompVis/stable-diffusion-v1-4 or stabilityai/stable-diffusion-2-1 use 2-1 for sizes > 512
    name: CompVis/stable-diffusion-v1-4
    train_text_encoder: true
    train_unet: true
    num_images_per_prompt: 4 # number of images to generate per prompt at evaluation time
    image_key: image_tensor
    caption_key: input_ids

  optimizer:
    lr: 5.0e-6
    weight_decay: 1.0e-2

  loggers:
    wandb:     # Uncomment and fill below arguments to use WandB logger
      entity:  # Name of WandB entity, usually username or organization name
      project: stable-diffusion-dreambooth # Name of WandB project
      group:   # Name of WandB group
      rank_zero_only: false

  # Save checkpoint parameters
  save_folder: # e.g. ./{run_name}/ckpt (local) or s3://mybucket/mydir/{run_name}/ckpt (remote)
  save_interval: 200ba # Interval to checkpoint based on time string
  save_num_checkpoints_to_keep: 5 # Cleans up checkpoints saved locally only!

  # Load checkpoint parameters
  load_path: # e.g. ./ckpt/latest-rank{rank}.pt (local) or s3://mybucket/mydir/ckpt/latest-rank{rank}.pt (remote)
